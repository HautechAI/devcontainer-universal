name: Build and Publish Devcontainer (Rust)

on:
  pull_request:
    branches: [ "**" ]
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: HautechAI/devcontainer-universal

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=stable,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=sha-${{ github.sha }}
            type=raw,value={{date 'YYYYMMDD'}},enable=${{ github.ref == 'refs/heads/main' }}
          labels: |
            org.opencontainers.image.title=devcontainer-universal (Rust)
            org.opencontainers.image.description=Universal DevContainer extended with Rust toolchain and common native deps.

      - name: Build image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Smoke tests (PR; local image, root)
        if: github.event_name == 'pull_request'
        run: |
          IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Using image: ${IMAGE_TAG}"
          docker run --rm ${IMAGE_TAG} bash -lc "set -euo pipefail; rustc --version; cargo --version; rustfmt --version; cargo clippy -V"

      - name: Smoke tests (PR; vscode user)
        if: github.event_name == 'pull_request'
        run: |
          IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          docker run --rm --user vscode ${IMAGE_TAG} bash -lc "set -euo pipefail; rustc --version; cargo --version; rustfmt --version; cargo clippy -V"

      - name: Smoke tests (main; remote image, root)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable
          docker pull ${IMAGE}
          docker run --rm ${IMAGE} bash -lc "set -euo pipefail; rustc --version; cargo --version; rustfmt --version; cargo clippy -V"

      - name: Smoke tests (main; vscode user)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable
          docker run --rm --user vscode ${IMAGE} bash -lc "set -euo pipefail; rustc --version; cargo --version; rustfmt --version; cargo clippy -V"

